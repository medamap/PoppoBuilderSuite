{
  "commands": {
    "init": {
      "description": "Initialize PoppoBuilder in the current directory",
      "alreadyExists": "PoppoBuilder is already initialized in this directory",
      "creating": "Creating PoppoBuilder configuration...",
      "githubToken": "Enter your GitHub token:",
      "repoOwner": "Enter repository owner:",
      "repoName": "Enter repository name:",
      "language": "Select language:",
      "success": "âœ… PoppoBuilder initialized successfully!",
      "nextSteps": "Next steps:",
      "nextStep1": "1. Configure your settings in .poppo/config.json",
      "nextStep2": "2. Run 'poppobuilder start' to begin processing issues"
    },
    "start": {
      "description": "Start PoppoBuilder",
      "starting": "Starting PoppoBuilder...",
      "alreadyRunning": "PoppoBuilder is already running (PID: {{pid}})"
    },
    "stop": {
      "description": "Stop PoppoBuilder",
      "stopping": "Stopping PoppoBuilder...",
      "stopped": "PoppoBuilder stopped",
      "notRunning": "PoppoBuilder is not running"
    },
    "status": {
      "description": "Show PoppoBuilder status",
      "running": "PoppoBuilder is running (PID: {{pid}})",
      "notRunning": "PoppoBuilder is not running",
      "uptime": "Uptime: {{uptime}}",
      "processedIssues": "Processed issues: {{count}}",
      "runningTasks": "Running tasks: {{count}}"
    },
    "config": {
      "description": "Manage PoppoBuilder configuration",
      "show": "Showing current configuration",
      "set": "Setting {{key}} to {{value}}",
      "get": "{{key}}: {{value}}"
    },
    "logs": {
      "description": "View PoppoBuilder logs",
      "follow": "Following logs (Ctrl+C to stop)...",
      "noLogs": "No logs found"
    },
    "doctor": {
      "description": "Check PoppoBuilder setup and dependencies",
      "checking": "Checking PoppoBuilder setup...",
      "nodeVersion": "Node.js version: {{version}}",
      "githubAuth": "GitHub authentication: {{status}}",
      "claudeCli": "Claude CLI: {{status}}",
      "configFile": "Configuration file: {{status}}"
    },
    "upgrade": {
      "description": "Upgrade PoppoBuilder to the latest version",
      "checking": "Checking for updates...",
      "current": "Current version: {{version}}",
      "latest": "Latest version: {{version}}",
      "upToDate": "PoppoBuilder is up to date",
      "upgrading": "Upgrading to version {{version}}..."
    },
    "globalConfig": {
      "description": "Manage PoppoBuilder global configuration",
      "show": {
        "description": "Show global configuration",
        "title": "Global Configuration",
        "notFound": "Configuration path '{{path}}' not found"
      },
      "set": {
        "description": "Set a configuration value",
        "success": "Set {{path}} = {{value}}"
      },
      "reset": {
        "description": "Reset configuration to defaults",
        "skipConfirmation": "Skip confirmation prompt",
        "confirm": "Are you sure you want to reset all global configuration?",
        "success": "Configuration reset to defaults"
      },
      "path": {
        "description": "Show configuration file paths",
        "title": "Configuration Paths"
      },
      "export": {
        "description": "Export configuration to file",
        "success": "Configuration exported to {{file}}"
      },
      "import": {
        "description": "Import configuration from file",
        "success": "Configuration imported from {{file}}"
      },
      "validate": {
        "description": "Validate configuration",
        "valid": "Configuration is valid",
        "invalid": "Configuration is invalid:"
      },
      "init": {
        "description": "Initialize global configuration",
        "exists": "Global configuration already exists",
        "success": "Global configuration created at {{path}}"
      }
    },
    "common": {
      "cancelled": "Operation cancelled"
    }
  },
  "options": {
    "daemon": "Run as daemon",
    "verbose": "Verbose output",
    "config": "Path to configuration file",
    "help": "Show help",
    "version": "Show version"
  },
  "errors": {
    "commandFailed": "Command failed:"
  }
}