version: '3.8'

services:
  poppobuilder:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: poppobuilder-daemon
    restart: unless-stopped
    ports:
      - "${POPPO_DAEMON_PORT:-3003}:3003"
    environment:
      - NODE_ENV=production
      - POPPO_CONFIG_DIR=/data/config
      - POPPO_DATA_DIR=/data
      - POPPO_DAEMON_PORT=3003
      - POPPO_DAEMON_HOST=0.0.0.0
      - POPPO_LOG_LEVEL=${POPPO_LOG_LEVEL:-info}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-poppo}:${POSTGRES_PASSWORD:-poppo123}@postgres:5432/${POSTGRES_DB:-poppobuilder}
    volumes:
      - poppo_config:/data/config
      - poppo_logs:/data/logs
      - poppo_state:/data/state
      - poppo_projects:/data/projects
    networks:
      - poppo_network
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 1G
          cpus: "0.5"

  redis:
    image: redis:7-alpine
    container_name: poppobuilder-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - poppo_network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"

  postgres:
    image: postgres:15-alpine
    container_name: poppobuilder-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-poppobuilder}
      - POSTGRES_USER=${POSTGRES_USER:-poppo}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-poppo123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts/db/backup:/backup
    networks:
      - poppo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-poppo} -d ${POSTGRES_DB:-poppobuilder}"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"

  prometheus:
    image: prom/prometheus:latest
    container_name: poppobuilder-prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - poppo_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"

  grafana:
    image: grafana/grafana:latest
    container_name: poppobuilder-grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - poppo_network
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"

  nginx:
    image: nginx:alpine
    container_name: poppobuilder-nginx
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - poppo_network
    depends_on:
      - poppobuilder
      - grafana
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"

  loki:
    image: grafana/loki:latest
    container_name: poppobuilder-loki
    restart: unless-stopped
    ports:
      - "${LOKI_PORT:-3100}:3100"
    volumes:
      - ./config/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - poppo_network
    command: -config.file=/etc/loki/local-config.yaml
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"

  promtail:
    image: grafana/promtail:latest
    container_name: poppobuilder-promtail
    restart: unless-stopped
    volumes:
      - ./config/promtail/config.yml:/etc/promtail/config.yml
      - poppo_logs:/var/log/poppo:ro
      - nginx_logs:/var/log/nginx:ro
    networks:
      - poppo_network
    depends_on:
      - loki
    command: -config.file=/etc/promtail/config.yml
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: poppobuilder-alertmanager
    restart: unless-stopped
    ports:
      - "${ALERTMANAGER_PORT:-9093}:9093"
    volumes:
      - ./config/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    networks:
      - poppo_network
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"

volumes:
  poppo_config:
    driver: local
  poppo_logs:
    driver: local
  poppo_state:
    driver: local
  poppo_projects:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  nginx_logs:
    driver: local
  alertmanager_data:
    driver: local

networks:
  poppo_network:
    driver: bridge